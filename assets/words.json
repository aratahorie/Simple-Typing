{
  "easy": [
    "cat", "dog", "run", "jump", "book", "tree", "home", "food", "water", "happy",
    "sun", "moon", "star", "fish", "bird", "car", "bike", "play", "game", "fun",
    "red", "blue", "green", "big", "small", "fast", "slow", "hot", "cold", "new",
    "old", "good", "bad", "yes", "no", "love", "like", "want", "need", "have",
    "make", "take", "give", "get", "come", "go", "see", "look", "find", "help"
  ],
  "normal": [
    "computer", "keyboard", "mountain", "beautiful", "interesting", "adventure",
    "challenge", "complete", "develop", "education", "family", "garden", "holiday",
    "important", "journey", "kitchen", "language", "morning", "nature", "ocean",
    "perfect", "question", "rainbow", "science", "teacher", "umbrella", "vacation",
    "weather", "yellow", "amazing", "believe", "country", "dinner", "energy",
    "friend", "guitar", "health", "island", "jacket", "knowledge", "library",
    "message", "network", "orange", "picture", "quality", "respect", "student",
    "together", "universe", "village", "window", "exercise", "yourself", "zodiac"
  ],
  "hard": [
    "extraordinary", "revolutionary", "consciousness", "philosophical", "architecture",
    "accomplishment", "biodiversity", "circumstance", "demonstration", "environment",
    "fundamental", "globalization", "headquarters", "illustration", "jurisdiction",
    "kaleidoscope", "linguistics", "mathematics", "neighborhood", "organization",
    "perspective", "questionnaire", "rehabilitation", "sophisticated", "temperature",
    "understanding", "vocabulary", "wavelength", "xylophone", "yesterday", "zoological",
    "abbreviation", "bureaucracy", "civilization", "determination", "encyclopedia",
    "fascination", "generalization", "hospitality", "imagination", "justification",
    "kindergarten", "laboratory", "magnificent", "nationalism", "observation",
    "participation", "qualification", "rationalize", "significance", "transformation"
  ],
  "expert": [
    "const express = require('express')",
    "function calculateAverage(numbers)",
    "document.getElementById('element')",
    "async function fetchData()",
    "import React from 'react'",
    "export default Component",
    "class Animal extends Creature",
    "interface UserInterface",
    "typedef struct Node",
    "public static void main(String[] args)",
    "SELECT * FROM users WHERE id = 1",
    "git commit -m 'Initial commit'",
    "npm install --save-dev webpack",
    "docker run -p 3000:3000 app",
    "kubectl apply -f deployment.yaml",
    "for (let i = 0; i < array.length; i++)",
    "while (condition) { statement }",
    "if (x > 0) return true",
    "switch (expression) { case value: }",
    "try { code } catch (error) { }",
    "const [state, setState] = useState()",
    "useEffect(() => { }, [])",
    "router.get('/api/users', controller)",
    "mongoose.connect('mongodb://localhost')",
    "app.listen(PORT, () => console.log())",
    "res.status(200).json({ data })",
    "Array.prototype.map.call(items)",
    "Object.keys(obj).forEach(key => {})",
    "Promise.all([promise1, promise2])",
    "async/await fetchUserData()",
    "localStorage.setItem('key', 'value')",
    "sessionStorage.getItem('token')",
    "JSON.parse(JSON.stringify(object))",
    "Math.floor(Math.random() * 100)",
    "new Date().toISOString()",
    "parseInt(string, 10)",
    "parseFloat(string).toFixed(2)",
    "isNaN(value) || isFinite(value)",
    "typeof variable === 'undefined'",
    "instanceof Array || Array.isArray()",
    "Object.assign({}, source)",
    "spread operator ...array",
    "destructuring { prop } = object",
    "template literal `${variable}`",
    "arrow function () => expression",
    "closure function factory()",
    "recursive function factorial(n)",
    "binary search algorithm O(log n)",
    "bubble sort algorithm O(n^2)",
    "quick sort pivot partition"
  ]
}